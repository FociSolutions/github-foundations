// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gjson "github.com/tidwall/gjson"
)

// MockIStateExplorer is an autogenerated mock type for the IStateExplorer type
type MockIStateExplorer struct {
	mock.Mock
}

type MockIStateExplorer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIStateExplorer) EXPECT() *MockIStateExplorer_Expecter {
	return &MockIStateExplorer_Expecter{mock: &_m.Mock}
}

// GetChangedResourceAddresses provides a mock function with given fields: filterFn
func (_m *MockIStateExplorer) GetChangedResourceAddresses(filterFn func(gjson.Result) bool) ([]string, error) {
	ret := _m.Called(filterFn)

	if len(ret) == 0 {
		panic("no return value specified for GetChangedResourceAddresses")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(func(gjson.Result) bool) ([]string, error)); ok {
		return rf(filterFn)
	}
	if rf, ok := ret.Get(0).(func(func(gjson.Result) bool) []string); ok {
		r0 = rf(filterFn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(func(gjson.Result) bool) error); ok {
		r1 = rf(filterFn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIStateExplorer_GetChangedResourceAddresses_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetChangedResourceAddresses'
type MockIStateExplorer_GetChangedResourceAddresses_Call struct {
	*mock.Call
}

// GetChangedResourceAddresses is a helper method to define mock.On call
//   - filterFn func(gjson.Result) bool
func (_e *MockIStateExplorer_Expecter) GetChangedResourceAddresses(filterFn interface{}) *MockIStateExplorer_GetChangedResourceAddresses_Call {
	return &MockIStateExplorer_GetChangedResourceAddresses_Call{Call: _e.mock.On("GetChangedResourceAddresses", filterFn)}
}

func (_c *MockIStateExplorer_GetChangedResourceAddresses_Call) Run(run func(filterFn func(gjson.Result) bool)) *MockIStateExplorer_GetChangedResourceAddresses_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func(gjson.Result) bool))
	})
	return _c
}

func (_c *MockIStateExplorer_GetChangedResourceAddresses_Call) Return(_a0 []string, _a1 error) *MockIStateExplorer_GetChangedResourceAddresses_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIStateExplorer_GetChangedResourceAddresses_Call) RunAndReturn(run func(func(gjson.Result) bool) ([]string, error)) *MockIStateExplorer_GetChangedResourceAddresses_Call {
	_c.Call.Return(run)
	return _c
}

// GetResourceChangeAfterAttribute provides a mock function with given fields: address, attribute
func (_m *MockIStateExplorer) GetResourceChangeAfterAttribute(address string, attribute string) (*gjson.Result, error) {
	ret := _m.Called(address, attribute)

	if len(ret) == 0 {
		panic("no return value specified for GetResourceChangeAfterAttribute")
	}

	var r0 *gjson.Result
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*gjson.Result, error)); ok {
		return rf(address, attribute)
	}
	if rf, ok := ret.Get(0).(func(string, string) *gjson.Result); ok {
		r0 = rf(address, attribute)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gjson.Result)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(address, attribute)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIStateExplorer_GetResourceChangeAfterAttribute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceChangeAfterAttribute'
type MockIStateExplorer_GetResourceChangeAfterAttribute_Call struct {
	*mock.Call
}

// GetResourceChangeAfterAttribute is a helper method to define mock.On call
//   - address string
//   - attribute string
func (_e *MockIStateExplorer_Expecter) GetResourceChangeAfterAttribute(address interface{}, attribute interface{}) *MockIStateExplorer_GetResourceChangeAfterAttribute_Call {
	return &MockIStateExplorer_GetResourceChangeAfterAttribute_Call{Call: _e.mock.On("GetResourceChangeAfterAttribute", address, attribute)}
}

func (_c *MockIStateExplorer_GetResourceChangeAfterAttribute_Call) Run(run func(address string, attribute string)) *MockIStateExplorer_GetResourceChangeAfterAttribute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockIStateExplorer_GetResourceChangeAfterAttribute_Call) Return(_a0 *gjson.Result, _a1 error) *MockIStateExplorer_GetResourceChangeAfterAttribute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIStateExplorer_GetResourceChangeAfterAttribute_Call) RunAndReturn(run func(string, string) (*gjson.Result, error)) *MockIStateExplorer_GetResourceChangeAfterAttribute_Call {
	_c.Call.Return(run)
	return _c
}

// GetResourceChangeResourceType provides a mock function with given fields: address
func (_m *MockIStateExplorer) GetResourceChangeResourceType(address string) (string, error) {
	ret := _m.Called(address)

	if len(ret) == 0 {
		panic("no return value specified for GetResourceChangeResourceType")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(address)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(address)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(address)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIStateExplorer_GetResourceChangeResourceType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceChangeResourceType'
type MockIStateExplorer_GetResourceChangeResourceType_Call struct {
	*mock.Call
}

// GetResourceChangeResourceType is a helper method to define mock.On call
//   - address string
func (_e *MockIStateExplorer_Expecter) GetResourceChangeResourceType(address interface{}) *MockIStateExplorer_GetResourceChangeResourceType_Call {
	return &MockIStateExplorer_GetResourceChangeResourceType_Call{Call: _e.mock.On("GetResourceChangeResourceType", address)}
}

func (_c *MockIStateExplorer_GetResourceChangeResourceType_Call) Run(run func(address string)) *MockIStateExplorer_GetResourceChangeResourceType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIStateExplorer_GetResourceChangeResourceType_Call) Return(_a0 string, _a1 error) *MockIStateExplorer_GetResourceChangeResourceType_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIStateExplorer_GetResourceChangeResourceType_Call) RunAndReturn(run func(string) (string, error)) *MockIStateExplorer_GetResourceChangeResourceType_Call {
	_c.Call.Return(run)
	return _c
}

// SetPlan provides a mock function with given fields: plan
func (_m *MockIStateExplorer) SetPlan(plan []byte) {
	_m.Called(plan)
}

// MockIStateExplorer_SetPlan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPlan'
type MockIStateExplorer_SetPlan_Call struct {
	*mock.Call
}

// SetPlan is a helper method to define mock.On call
//   - plan []byte
func (_e *MockIStateExplorer_Expecter) SetPlan(plan interface{}) *MockIStateExplorer_SetPlan_Call {
	return &MockIStateExplorer_SetPlan_Call{Call: _e.mock.On("SetPlan", plan)}
}

func (_c *MockIStateExplorer_SetPlan_Call) Run(run func(plan []byte)) *MockIStateExplorer_SetPlan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *MockIStateExplorer_SetPlan_Call) Return() *MockIStateExplorer_SetPlan_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIStateExplorer_SetPlan_Call) RunAndReturn(run func([]byte)) *MockIStateExplorer_SetPlan_Call {
	_c.Call.Return(run)
	return _c
}

// SetPlanFile provides a mock function with given fields: planFilePath
func (_m *MockIStateExplorer) SetPlanFile(planFilePath string) error {
	ret := _m.Called(planFilePath)

	if len(ret) == 0 {
		panic("no return value specified for SetPlanFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(planFilePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIStateExplorer_SetPlanFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPlanFile'
type MockIStateExplorer_SetPlanFile_Call struct {
	*mock.Call
}

// SetPlanFile is a helper method to define mock.On call
//   - planFilePath string
func (_e *MockIStateExplorer_Expecter) SetPlanFile(planFilePath interface{}) *MockIStateExplorer_SetPlanFile_Call {
	return &MockIStateExplorer_SetPlanFile_Call{Call: _e.mock.On("SetPlanFile", planFilePath)}
}

func (_c *MockIStateExplorer_SetPlanFile_Call) Run(run func(planFilePath string)) *MockIStateExplorer_SetPlanFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIStateExplorer_SetPlanFile_Call) Return(_a0 error) *MockIStateExplorer_SetPlanFile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIStateExplorer_SetPlanFile_Call) RunAndReturn(run func(string) error) *MockIStateExplorer_SetPlanFile_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIStateExplorer creates a new instance of MockIStateExplorer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIStateExplorer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIStateExplorer {
	mock := &MockIStateExplorer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
