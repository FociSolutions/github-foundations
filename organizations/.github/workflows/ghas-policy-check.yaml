name: "GitHub Advanced Security (GHAS) checks"

on:
    schedule:
        - cron: '0 2 * * *'
    workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    find-applicable-repos:
        runs-on: ubuntu-latest
        outputs:
          repos: ${{ steps.repo_list.outputs.repos }}

        steps:
            - name: Checkout the GitHub Foundations repository
              uses: actions/checkout@v4

            - name: Get the Go CLI
              run: |
                curl -OL https://github.com/FociSolutions/github-foundations-cli/releases/latest/download/github-foundations-cli_Linux_x86_64.tar.gz
                tar -xzf github-foundations-cli_Linux_x86_64.tar.gz

            - name: Get the list of repos with GHAS enabled
              id: repo_list
              run: |
                echo "Finding applicable repos in \"${{ github.workspace }}/projects/\""
                repos=$(./github-foundations-cli list repos --ghas ${{ github.workspace }}/projects/)
                echo -e "Found repos: $repos"
                echo "repos=$(echo -e "${repos}" | sed s/\'/\"/g)" >> $GITHUB_OUTPUT

    check_ghas_policies:
        runs-on: ubuntu-latest
        needs: find-applicable-repos
        permissions:
            actions: read
            contents: read
            id-token: write
        strategy:
            matrix:
                repo: ${{ fromJson(needs.find-applicable-repos.outputs.repos) }}
        steps:
            - name: Checkout the repo
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}

            - name: Get the GitHub token
              id: generate_token
              uses: FociSolutions/github-foundations/organizations/.github/actions/get-gh-token-gcp@main
              with:
                  repo_name: ${{ matrix.repo }}
                  gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
                  workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

            - name: For each repo, run the policy checks
              uses: advanced-security/policy-as-code@v2.7.2
              #   env:
              #     DEBUG: true
              with:
                repository: ${{ matrix.repo }}
                ref: refs/heads/main
                policy-branch: main
                token: ${{ steps.generate_token.outputs.token }}
                action: continue
