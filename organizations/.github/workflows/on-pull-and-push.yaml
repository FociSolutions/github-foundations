name: "Pull And Push Jobs"

on:
  push:
    branches:
      - main
  pull_request:


env:
  tf_version: 1.7.5
  tg_version: 0.55.18
  working_dir: .
  GCP_SECRET_MANAGER_PROJECT: "${{ vars.GCP_SECRET_MANAGER_PROJECT }}"
  GCP_TF_STATE_BUCKET_PROJECT: "${{ vars.TF_STATE_BUCKET_PROJECT_ID}}"
  GCP_TF_STATE_BUCKET_NAME: "${{vars.TF_STATE_BUCKET_NAME}}"
  GCP_TF_STATE_BUCKET_LOCATION: "${{vars.TF_STATE_BUCKET_LOCATION}}"

jobs:
  terraform-plan-and-apply:
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
      issues: 'write'
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.working_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.tf_version }}

      - name: GCP Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Check Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Check Terragrunt HCL
        id: grunt-fmt
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      - name: Terragrunt Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@v2
        continue-on-error: true
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all plan -out tfplan'

      - name: Terragrunt Plan Condensing
        id: condense
        uses: gruntwork-io/terragrunt-action@v2
        continue-on-error: true
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all show tfplan --terragrunt-no-color -no-color'

      - name: Terragrunt Plan Cleaning
        id: clean
        run: |
          TG_OUT=$(echo "${{ steps.condense.outputs.tg_action_output }}" | sed 's|%0A|\n|g')
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$TG_OUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terragrunt Format and Style üñå\`${{ steps.grunt-fmt.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`


            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Check/Count Deletions
        id: deletions
        if: contains(env.PLAN, 'will be destroyed')
        continue-on-error: true
        run: |
          DELETIONS="$(echo "${{ env.PLAN }}" | grep -c 'will be destroyed')"
          if [[ $DELETIONS -gt 0 ]]; then
            echo "DELETIONS=${DELETIONS}" >> $GITHUB_ENV
            echo "${DELETIONS} Deletion(s) found in the plan."
          fi

      - name: No Deletions
        id: no-deletions
        if: ${{ !contains(env.PLAN , 'will be destroyed') }}
        # set the env.DELETIONS to 0
        run: echo "DELETIONS=0" >> $GITHUB_ENV

      - name: Comment on PR if deletions
        if: env.DELETIONS > 0
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### ‚ö†Ô∏è The Terraform Plan contains ${process.env.DELETIONS} Deletion(s) ‚ö†Ô∏è
            Please review the plan and ensure that the deletions are expected.

            If the deletions are expected, you must:

              1. Create a new comment on this PR.
              2. Set the contents to \`delete\` (no quotes)
              3. Press the comment button.

            before you can merge.`;

            github.rest.pulls.createReview({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output,
              event: 'REQUEST_CHANGES'
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terragrunt Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all apply --terragrunt-no-color'
