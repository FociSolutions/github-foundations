name: Get The Github Token
description: Retrieve the GitHub token and metadata from GCP
inputs:
    repo_name:
        description: 'The name of the `org/repository` to retrieve the GH private key from'
        required: true
    GCP_SERVICE_ACCOUNT:
        description: 'The GCP service account to use for authentication'
        required: true
    WORKLOAD_IDENTITY_PROVIDER:
        description: 'The workload identity provider to use for authentication'
        required: true
outputs:
    repo_name:
        description: 'The name of the `org/repository` to retrieve the GH private key from'
        value: ${{ inputs.repo_name }}
    token:
        description: 'The GitHub token'
        value: ${{ jobs.retrieve_token_and_metadata.outputs.token }}
    app_id:
        description: 'The GitHub app ID'
        value: ${{ jobs.retrieve_token_and_metadata.outputs.app_id }}
    installation_id:
        description: 'The GitHub installation ID'
        value: ${{ jobs.retrieve_token_and_metadata.outputs.installation_id }}

runs:
    using: 'composite'
    steps:
    - name: Parse the org and repo names
      shell: bash
      run: |
        org_name=$(echo "${{ inputs.repo_name }}" | cut -d'/' -f1)
        echo "ORG_NAME=$org_name" >> $GITHUB_ENV
        repo_name=$(echo "${{ inputs.repo_name }}" | cut -d'/' -f2)
        echo "REPO_NAME=$repo_name" >> $GITHUB_ENV


    - name: GCP Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
        service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 2.1.0'

    - name: Download PEM file from Secret Manager
      id: download_pem
      shell: bash
      run: |
        gcloud secrets versions access latest --secret="${{ env.ORG_NAME }}Pem" > pem_file.pem
        PRIVATE_KEY=$(sed -z 's/\n/\\n/g' pem_file.pem)
        echo -n "PRIVATE_KEY<<EOF" >> $GITHUB_OUTPUT
        echo -en "\n$PRIVATE_KEY\n" >> $GITHUB_OUTPUT
        echo -n "EOF" >> $GITHUB_OUTPUT

    - name: Get the application and installations IDs
      id: get_app_ids
      shell: bash
      run: |
        # Access the secret's metadata
        metadata=$(gcloud secrets describe "${{ env.ORG_NAME }}Pem")

        # Parse the metadata to extract the annotations
        app_id=$(echo "$metadata" | grep "appId" | cut -d':' -f2 | tr -d '[:space:]' | tr -d "'")
        installation_id=$(echo "$metadata" | grep "installationId" | cut -d':' -f2 | tr -d '[:space:]' | tr -d "'")

        echo "app_id=$app_id" >> $GITHUB_OUTPUT
        echo "installation_id=$installation_id" >> $GITHUB_OUTPUT

    - name: Generate a Github token
      uses: actions/create-github-app-token@v1
      id: generate_token
      with:
        private-key: ${{ steps.download_pem.outputs.PRIVATE_KEY }}
        app-id: ${{ steps.get_app_ids.outputs.app_id }}
        owner: ${{ env.ORG_NAME }}
        repositories: ${{ env.REPO_NAME }}
