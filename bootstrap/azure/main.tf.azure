locals {
  oidc_configuration = {
    azure = {
      bootstrap_client_id    = module.github_oidc.bootstrap_client_id
      organization_client_id = module.github_oidc.organization_client_id
      tenant_id              = module.github_oidc.tenant_id
      subscription_id        = module.github_oidc.subscription_id
      resource_group_name    = module.github_oidc.resource_group
      storage_account_name   = module.github_oidc.sa_name
      container_name         = module.github_oidc.container_name
      key_vault_id           = module.github_oidc.key_vault_id
    }
  }

  # Set a default state container name if one is not provided
  az_state_container = var.tf_state_bucket_name == "" ? "ghf-state" : var.tf_state_bucket_name
}

module "github_oidc" {
  source = "github.com/FociSolutions/github-foundations-modules//modules/github-azure-oidc?ref=v0.0.3"

  rg_name     = var.tf_state_project
  rg_create   = true

  rg_location = var.tf_state_location

  sa_name                                               = "ghfoundations"
  sa_tier                                               = "Standard"
  sa_replication_type                                   = "LRS"
  tf_state_container                                    = local.az_state_container
  tf_state_container_anonymous_access_level             = "private"
  tf_state_container_encryption_scope_override_enabled  = false

  kv_resource_group = var.secret_store_project
  kv_name           = var.secret_store_name

  github_foundations_organization_name = var.github_foundations_organization_name
  drift_detection_branch_name          = "main"
}

# Github foundations setup
module "github_foundations_organization" {
  source = "github.com/FociSolutions/github-foundations-modules//modules/enterprise-organization?ref=v0.0.3"
  providers = {
    github = github.enterprise_scoped
  }

  count = local.no_enterprise_account ? 0 : 1

  enterprise_id = local.no_enterprise_account ? "" : data.github_enterprise.enterprise_account[0].id
  name          = var.github_foundations_organization_name
  display_name  = "Github Foundations"
  description   = "Organization created to host github foundation toolkit repositories"
  admin_logins  = var.github_organization_admin_logins
  billing_email = var.github_organization_billing_email
}

module "github_foundations" {
  source = "github.com/FociSolutions/github-foundations-modules//modules/github-foundations?ref=v0.0.3"
  providers = {
    github = github.foundation_org_scoped
  }

  oidc_configuration = local.oidc_configuration

  account_type = var.github_account_type
}

# Other organizations that should exist under your github enterprise account
module "organizations" {
  source = "github.com/FociSolutions/github-foundations-modules//modules/enterprise-organization?ref=v0.0.3"
  providers = {
    github = github.enterprise_scoped
  }

  for_each = local.no_enterprise_account ? {} : var.github_enterprise_organizations

  enterprise_id = local.no_enterprise_account ? "" : data.github_enterprise.enterprise_account[0].id

  name          = each.key
  display_name  = each.value.display_name
  description   = each.value.description
  billing_email = each.value.billing_email
  admin_logins  = each.value.admin_logins
}
